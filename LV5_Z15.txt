#include <stdio.h>

int matrice_permutacija(double A[100][100], double B[100][100], double C[100][100],int M,int N){
    int i,z[3]={0,0,0},q[3]={0,0,0},j,w,t,k;
    double min[3],temp,A_novo[100][100],B_novo[100][100],C_novo[100][100];
    for(i=0;i<M;i++)
        for(j=0;j<N;j++){
            A_novo[i][j]=A[i][j];
            B_novo[i][j]=B[i][j];
            C_novo[i][j]=C[i][j];
        } 
    for(i=0;i<M;i++){
        for(j=0;j<N;j++){
            z[0]=i;
            z[1]=i;
            z[2]=i;
            q[0]=j;
            q[1]=j;
            q[2]=j;
            min[0]=A_novo[i][j];
            min[1]=B_novo[i][j];
            min[2]=C_novo[i][j];
            w=j;
            for(k=i;k<M;k++){
                for(;w<N;w++){
                    if(A_novo[k][w]<min[0]){
                        min[0]=A_novo[k][w];
                        z[0]=k;
                        q[0]=w;
                    }
                    if(B_novo[k][w]<min[1]){
                        min[1]=B_novo[k][w];
                        z[1]=k;
                        q[1]=w;
                    }
                    if(C_novo[k][w]<min[2]){
                        min[2]=C_novo[k][w];
                        z[2]=k;
                        q[2]=w;
                    }
                }
                w=0;
            }
            temp=A_novo[i][j];
            A_novo[i][j]=min[0];
            A_novo[z[0]][q[0]]=temp;

            temp=B_novo[i][j];
            B_novo[i][j]=min[1];
            B_novo[z[1]][q[1]]=temp;

            temp=C_novo[i][j];
            C_novo[i][j]=min[2];
            C_novo[z[2]][q[2]]=temp;
        }
    }
    
    for(i=0;i<M;i++){
        for(j=0;j<N;j++){
            if(A_novo[i][j]!=B_novo[i][j]||A_novo[i][j]!=C_novo[i][j]||C_novo[i][j]!=B_novo[i][j]) return 0;
        }
    }
    return 1;
}
int main() {
    int i,j;
	double A[100][100]={{1,2},{3,4}};
    double B[100][100]={{1,3},{2,4}};
    double C[100][100]={{3,2},{4,1}};
    printf("%d \n",matrice_permutacija(A,B,C,2,2));
	return 0;
}
